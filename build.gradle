buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath "gradle.plugin.org.gradle.java:experimental-jigsaw:0.1.1"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'maven'
apply plugin: 'signing'

//apply plugin: "org.gradle.java.experimental-jigsaw"
apply plugin: "com.github.hierynomus.license"
apply plugin: 'org.junit.platform.gradle.plugin'

group projectGroup
version projectVersion
archivesBaseName = projectArtifactId

sourceCompatibility = 1.9

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
}

task javadocJar(type: Jar) {
   classifier = 'javadoc'
   from javadoc
}

task sourcesJar(type: Jar) {
   classifier = 'sources'
   from sourceSets.main.allSource
}

javadoc {
    /* Add support for tasty new Java 8 tags */
    options.tags = [
            'apiNote:a:API Note:',
            'implSpec:a:Implementation Requirements:',
            'implNote:a:Implementation Note:'
    ]
}

license {
    header = rootProject.file('gradle/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java = 'SLASHSTAR_STYLE'
        fxml = 'XML_STYLE'
    }
    ext.year = projectYear
    ext.author = projectAuthor
    ext.project = projectName
}

artifacts {
   archives javadocJar, sourcesJar
}

signing {
   sign configurations.archives
}

uploadArchives {
   repositories {
      mavenDeployer {
         beforeDeployment {
            MavenDeployment deployment -> signing.signPom(deployment)
         }
         
         repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: ossrhUserName, password: ossrhPassword)
         }
         
         snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: ossrhUserName, password: ossrhPassword)
         }
         
         pom.project {
            name projectName
            packaging 'jar'
            artifactId projectArtifactId
            description projectDescription
            url projectGithubUrl
            
            scm {
               connection "scm:git:$projectGithubLink"
               developerConnection projectScmLink
               url projectGithubLink
            }
            
            licenses {
               license {
                  name 'The MIT License (MIT)'
                  url 'http://opensource.org/licenses/MIT'
                  distribution 'repo'
               }
            }
            
            developers {
               developer {
                  id 'jmathewburns'
                  name 'Jacques Burns'
                  email 'dev@rangefun.xyz'
               }
            }
         }
      }
   }
}